// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-redis/redis/v8"
	"github.com/labstack/echo/v4"
	"gorm.io/gorm"
	"ry-go/business/controller"
	"ry-go/business/dao/daoImpl"
	"ry-go/business/service/serviceImpl"
	"ry-go/router"
	"ry-go/utils"
	"sync"
)

// Injectors from wire.go:

func WireApp(db *gorm.DB, client *redis.Client, redisStore *utils.RedisStore, syncMap sync.Map) (*echo.Echo, func(), error) {
	sysRoleMenuDaoImpl := daoImpl.NewSysRoleMenuDaoImpl(db)
	sysRoleDeptDaoImpl := daoImpl.NewSysRoleDeptDaoImpl(db)
	sysRoleDaoImpl := daoImpl.NewSysRoleDaoImpl(db, sysRoleMenuDaoImpl, sysRoleDeptDaoImpl)
	sysDeptDaoImpl := daoImpl.NewSysDeptDaoImpl(db, sysRoleDaoImpl)
	sysPostDaoImpl := daoImpl.NewSysPostDaoImpl(db)
	sysUserRoleDaoImpl := daoImpl.NewSysUserRoleDaoImpl(db)
	sysUserPostDaoImpl := daoImpl.NewSysUserPostDaoImpl(db)
	sysUserDaoImpl := daoImpl.NewSysUserDaoImpl(db, sysDeptDaoImpl, sysPostDaoImpl, sysRoleDaoImpl, sysUserRoleDaoImpl, sysUserPostDaoImpl)
	sysUserServiceImpl := serviceImpl.NewSysUserServiceImpl(sysUserDaoImpl)
	captchaServiceImpl := serviceImpl.NewCaptchaServiceImpl(client, redisStore)
	sysDeptServiceImpl := serviceImpl.NewSysDeptServiceImpl(sysDeptDaoImpl)
	sysRoleServiceImpl := serviceImpl.NewSysRoleServiceImpl(sysRoleDaoImpl)
	sysMenuDaoImpl := daoImpl.NewSysMenuDaoImpl(db, sysRoleDaoImpl)
	sysMenuServiceImpl := serviceImpl.NewSysMenuServiceImpl(sysMenuDaoImpl)
	tokenServiceImpl := serviceImpl.NewTokenServiceImpl(client)
	userController := controller.UserControllerInit(sysUserServiceImpl, captchaServiceImpl, sysDeptServiceImpl, sysRoleServiceImpl, sysMenuServiceImpl, tokenServiceImpl)
	deptController := controller.DeptControllerInit(sysDeptServiceImpl, tokenServiceImpl)
	sysNoticeDaoImpl := daoImpl.NewSysNoticeDaoImpl(db)
	sysNoticeServiceImpl := serviceImpl.NewSysNoticeServiceImpl(sysNoticeDaoImpl)
	sysNoticeController := controller.SysNoticeControllerInit(sysNoticeServiceImpl)
	sysMenuController := controller.SysMenuControllerInit(sysMenuServiceImpl, tokenServiceImpl)
	permissionServiceImpl := serviceImpl.NewPermissionServiceImpl(sysRoleDaoImpl, sysMenuDaoImpl)
	sysRoleController := controller.SysRoleControllerInit(sysRoleServiceImpl, sysUserServiceImpl, tokenServiceImpl, permissionServiceImpl)
	sysDictDataDaoImpl := daoImpl.NewSysDictDataDaoImpl(db, client)
	sysDictDataServiceImpl := serviceImpl.NewSysDictDataServiceImpl(sysDictDataDaoImpl)
	sysDictDataController := controller.SysDictDataControllerInit(sysDictDataServiceImpl, client)
	fileServiceImpl := serviceImpl.NewFileServiceImpl()
	fileController := controller.FileControllerInit(fileServiceImpl)
	barcodeController := controller.BarcodeControllerInit()
	qrcodeController := controller.QrcodeControllerInit()
	sysUserRoleServiceImpl := serviceImpl.NewSysUserRoleServiceImpl(sysUserRoleDaoImpl)
	sysUserRoleController := controller.SysUserRoleControllerInit(sysUserRoleServiceImpl)
	sysPostServiceImpl := serviceImpl.NewSysPostServiceImpl(sysPostDaoImpl)
	sysPostController := controller.SysPostControllerInit(sysPostServiceImpl)
	sysDictTypeDaoImpl := daoImpl.NewSysDictTypeDaoImpl(db, client, sysDictDataDaoImpl)
	sysDictTypeServiceImpl := serviceImpl.NewSysDictTypeServiceImpl(sysDictTypeDaoImpl)
	sysDictTypeController := controller.SysDictTypeControllerInit(sysDictTypeServiceImpl)
	sysLoginRecordDaoImpl := daoImpl.NewSysLoginRecordDaoImpl(db)
	sysLoginRecordServiceImpl := serviceImpl.NewSysLoginRecordServiceImpl(sysLoginRecordDaoImpl)
	loginController := controller.LoginControllerInit(sysUserServiceImpl, captchaServiceImpl, sysDeptServiceImpl, sysRoleServiceImpl, sysMenuServiceImpl, tokenServiceImpl, sysLoginRecordServiceImpl, permissionServiceImpl)
	sysLoginRecordController := controller.SysLoginRecordControllerInit(sysLoginRecordServiceImpl, tokenServiceImpl)
	sysConfigDaoImpl := daoImpl.NewSysConfigDaoImpl(db, client)
	sysConfigServiceImpl := serviceImpl.NewSysConfigServiceImpl(sysConfigDaoImpl)
	sysConfigController := controller.SysConfigControllerInit(sysConfigServiceImpl)
	sysOperationLogDaoImpl := daoImpl.NewSysOperationLogDaoImpl(db)
	sysOperationLogServiceImpl := serviceImpl.NewSysOperationLogServiceImpl(sysOperationLogDaoImpl)
	sysOperationLogController := controller.SysOperationLogControllerInit(sysOperationLogServiceImpl)
	sysMonitorServiceImpl := serviceImpl.NewSysMonitorServiceImpl(client)
	sysMonitorController := controller.SysMonitorControllerInit(sysMonitorServiceImpl)
	sysJobDaoImpl := daoImpl.NewSysJobDaoImpl(db)
	sysJobServiceImpl := serviceImpl.NewSysJobServiceImpl(sysJobDaoImpl)
	cronSchedulerServiceImpl := serviceImpl.NewCornSchedulerServiceImpl(db, syncMap, sysJobDaoImpl)
	sysJobController := controller.SysJobControllerInit(sysJobServiceImpl, cronSchedulerServiceImpl)
	sysJobLogDaoImpl := daoImpl.NewSysJobLogDaoImpl(db)
	sysJobLogServiceImpl := serviceImpl.NewSysJobLogServiceImpl(sysJobLogDaoImpl)
	sysJobLogController := controller.SysJobLogControllerInit(sysJobLogServiceImpl)
	echoEcho, err := router.NewRouter(userController, deptController, sysNoticeController, sysMenuController, sysRoleController, sysDictDataController, fileController, barcodeController, qrcodeController, sysUserRoleController, sysPostController, sysDictTypeController, loginController, sysLoginRecordController, sysConfigController, sysOperationLogController, sysMonitorController, sysJobController, sysJobLogController)
	if err != nil {
		return nil, nil, err
	}
	return echoEcho, func() {
	}, nil
}
